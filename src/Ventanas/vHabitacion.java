
package Ventanas;

import Clases.Habitacion;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;



public class vHabitacion extends javax.swing.JFrame {

   ArrayList <Habitacion> H;

    public vHabitacion(ArrayList<Habitacion>AH) {
        H=AH;
        
        initComponents();
        LeerBinarioHabitacion();
        setResizable(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        eHabitacionT = new javax.swing.JLabel();
        eLogoH = new javax.swing.JLabel();
        bSalir2 = new javax.swing.JButton();
        eCodigo = new javax.swing.JLabel();
        eCapacidad = new javax.swing.JLabel();
        tCodigo = new javax.swing.JTextField();
        tCapacidad = new javax.swing.JTextField();
        eNombre = new javax.swing.JLabel();
        tNombre = new javax.swing.JTextField();
        eDes = new javax.swing.JLabel();
        tDes = new javax.swing.JTextField();
        bBinario = new javax.swing.JButton();
        bAgregar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        bReporte = new javax.swing.JButton();
        bBuscar = new javax.swing.JButton();
        bModificar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        eHabitacionT.setFont(new java.awt.Font("Bahnschrift", 1, 45)); // NOI18N
        eHabitacionT.setText("HABITACIONES");

        eLogoH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LOGOBOTTONC.png"))); // NOI18N

        bSalir2.setBackground(new java.awt.Color(204, 204, 204));
        bSalir2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SALIR.png"))); // NOI18N
        bSalir2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        bSalir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalir2ActionPerformed(evt);
            }
        });

        eCodigo.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        eCodigo.setText("CODIGO");

        eCapacidad.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        eCapacidad.setText("CAPACIDAD");

        tCodigo.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        tCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tCapacidad.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        tCapacidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        eNombre.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        eNombre.setText("NOMBRE");

        tNombre.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        tNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        eDes.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        eDes.setText("DESCRIPCION");

        tDes.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        tDes.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        bBinario.setBackground(new java.awt.Color(204, 204, 204));
        bBinario.setFont(new java.awt.Font("Bahnschrift", 3, 14)); // NOI18N
        bBinario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bBinario.png"))); // NOI18N
        bBinario.setText("BINARIO");
        bBinario.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        bBinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBinarioActionPerformed(evt);
            }
        });

        bAgregar.setBackground(new java.awt.Color(204, 204, 204));
        bAgregar.setFont(new java.awt.Font("Bahnschrift", 3, 14)); // NOI18N
        bAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bAgregar.png"))); // NOI18N
        bAgregar.setText("AGREGAR");
        bAgregar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        bAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarActionPerformed(evt);
            }
        });

        bEliminar.setBackground(new java.awt.Color(204, 204, 204));
        bEliminar.setFont(new java.awt.Font("Bahnschrift", 3, 14)); // NOI18N
        bEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bEliminar.png"))); // NOI18N
        bEliminar.setText("ELIMINAR");
        bEliminar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        bReporte.setBackground(new java.awt.Color(204, 204, 204));
        bReporte.setFont(new java.awt.Font("Bahnschrift", 3, 14)); // NOI18N
        bReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bReporte.png"))); // NOI18N
        bReporte.setText("REPORTE");
        bReporte.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        bReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReporteActionPerformed(evt);
            }
        });

        bBuscar.setBackground(new java.awt.Color(204, 204, 204));
        bBuscar.setFont(new java.awt.Font("Bahnschrift", 3, 14)); // NOI18N
        bBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bBuscar.png"))); // NOI18N
        bBuscar.setText("BUSCAR");
        bBuscar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        bModificar.setBackground(new java.awt.Color(204, 204, 204));
        bModificar.setFont(new java.awt.Font("Bahnschrift", 3, 14)); // NOI18N
        bModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bModificar.png"))); // NOI18N
        bModificar.setText("MODIFICAR");
        bModificar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bSalir2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eLogoH))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(eCapacidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(eDes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tDes, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(eCodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eHabitacionT)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(eNombre)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(33, 33, 33)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bBinario, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(eLogoH, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bSalir2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(eHabitacionT)
                        .addGap(32, 32, 32)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eCodigo)
                    .addComponent(tCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eNombre)
                    .addComponent(tNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eCapacidad)
                    .addComponent(tCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eDes)
                    .addComponent(tDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bBuscar)
                        .addComponent(bEliminar))
                    .addComponent(bAgregar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bBinario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bReporte)
                        .addComponent(bModificar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSalir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalir2ActionPerformed
      vMenu abrir= new  vMenu();
        abrir.setVisible(true);
         dispose();
    }//GEN-LAST:event_bSalir2ActionPerformed

    private void LeerBinarioHabitacion()
      {
        FileInputStream fis = null;
        ObjectInputStream entrada = null;

        try {

            fis = new FileInputStream("BINARIO HABITACION.dat");
            entrada = new ObjectInputStream(fis);
            H = (ArrayList<Habitacion>) entrada.readObject(); //es necesario el casting
            
        } catch (FileNotFoundException e) {
                // System.out.println(e.getMessage());
        } catch (ClassNotFoundException e) {
                // System.out.println(e.getMessage());
        } catch (IOException e) {
                // System.out.println(e.getMessage());
        } finally {
            try {
                if (fis != null) {
                    fis.close();
                }
                if (entrada != null) {
                    entrada.close();
                }
            } catch (IOException e) {
                    // System.out.println(e.getMessage());
            }
        }
    }
    
    
    
    
    private void bBinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBinarioActionPerformed
        FileOutputStream fos = null;
        ObjectOutputStream salida;
        salida= null;
       

        try {
            //Se crea el fichero
            fos = new FileOutputStream("BINARIO HABITACION.dat");                                                 
            salida = new ObjectOutputStream(fos);
   
            salida.writeObject(H);
   
           
        } catch (FileNotFoundException e) {
                 System.out.println("1"+e.getMessage());                                                          
        } catch (IOException e) {
                 System.out.println("2"+e.getMessage());
        } finally {
            try {
                if(fos!=null){
                   fos.close();
                }
                if(salida!=null){
                   salida.close();
                }
            } catch (IOException e) {
                     System.out.println("3"+e.getMessage());
            }
        }   
       
        JOptionPane.showMessageDialog(null,"**SE HA GENERADO EL DOCUMENTO BINARIO EXITOSAMENTE**", "MENSAJE",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_bBinarioActionPerformed

    private void LimpiarCampos(){
        tCodigo.setText("");
        tNombre.setText("");
        tCapacidad.setText("");
        tDes.setText("");
        
        tCodigo.requestFocus();
    
    }
    
    
    private void bAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarActionPerformed
         Habitacion tmpHabitacion= buscarCodigo(tCodigo.getText());
        if(tmpHabitacion==null)
        {// SI NO EXISTE EL CODIGO EN EL ARREGLO DE OBJETOS
         tmpHabitacion= buscarNombre(tNombre.getText());
        if(tmpHabitacion==null)
        {
         Habitacion oHabitacion= new Habitacion();
        oHabitacion.setCodigo(tCodigo.getText());
        oHabitacion.setNombre(tNombre.getText());
        oHabitacion.setCapacidad(tCapacidad.getText());
        oHabitacion.setDescripcion(tDes.getText());
                
        
        H.add(oHabitacion);
        JOptionPane.showMessageDialog(null,"**LOS DATOS HAN SIDO AGREGADOS EXITOSAMENTE**", "MENSAJE",JOptionPane.INFORMATION_MESSAGE);
        LimpiarCampos();
        }
        else
        {
              JOptionPane.showMessageDialog(null,"**LO SENTIMOS NOMBRE YA FUE REGISTRADO ANTERIORMENTE**", "ADVERTENCIA",JOptionPane.ERROR_MESSAGE);
                 LimpiarCampos();  
        }
        
        }
        else
        {
        JOptionPane.showMessageDialog(null,"**LO SENTIMOS CODIGO YA FUE REGISTRADO ANTERIORMENTE**", "ADVERTENCIA",JOptionPane.ERROR_MESSAGE);
                 LimpiarCampos(); 
        
        }
        
        
    }//GEN-LAST:event_bAgregarActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        Habitacion oHabitacion = buscarCodigo(tCodigo.getText());
        if(oHabitacion!=null)
        {
        H.remove(oHabitacion);
        JOptionPane.showMessageDialog(null,"**EL REGISTRO DE LA HABITACION HA SIDO ELIMINIDO CON EXITO**", "MENSAJE",JOptionPane.ERROR_MESSAGE);
        LimpiarCampos();
        }
        else
           {
               JOptionPane.showMessageDialog(null,"**LO SENTIMOS..... HABITACION INEXISTENTE, INTENTE NUEVAMENTE**", "MENSAJE",JOptionPane.ERROR_MESSAGE);
               LimpiarCampos();
           } 
    }//GEN-LAST:event_bEliminarActionPerformed

    private void bReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReporteActionPerformed
        BufferedWriter ficheroSalida;
            try {
            ficheroSalida = new BufferedWriter(new FileWriter(new File("REPORTE HABITACION.html")));
            ficheroSalida.write("<HTML><HEAD><TITLE>REPORTE HABITACION</TITLE></HEAD><BODY>");
            ficheroSalida.write("<center><h1>***REPORTE HABITACION**</h1></center>");
            ficheroSalida.write("<center><table border =\"4\">");
            ficheroSalida.write("<tr><th>CODIGO</th><th>NOMBRE</th><th>CAPACIDAD</th><th>DESCRIPCION</th></tr>");
            
            Iterator <Habitacion> it = H.iterator();
            while(it.hasNext()) {
                Habitacion hb = it.next();
                ficheroSalida.write("<tr><td>"+hb.getCodigo()+"</td><td>"+hb.getNombre()+"</td><td>"+hb.getCapacidad()+"</td><td>"+hb.getDescripcion()+"</td></tr>");
            }
            ficheroSalida.write("</table></center></BODY></HTML>");
            ficheroSalida.close(); //cierra el fichreo
             } catch (IOException ex) {
           
        }
        JOptionPane.showMessageDialog(null,"**SE HA GENERADO TU REPORTE HTML EXITOSAMENTE**", "MENSAJE",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_bReporteActionPerformed

    private Habitacion buscarCodigo(String codigo)
    {
        boolean encontrado =false; // bandera: no se ha encontrado nit
        Iterator <Habitacion> it = H.iterator();
            Habitacion habitacion = null;
            while(it.hasNext() && (!encontrado)){
            habitacion = it.next();
            if(codigo.compareTo(habitacion.getCodigo())==0)
            {
            //encontro el nit en el arreglo
                encontrado=true; // cambio de la bandera
            }
                  
            }
        if (encontrado)
        {
        return habitacion;
        }
        else
        {
        return null;
        }  
    }
    
     private Habitacion buscarNombre(String nombre)
    {
        boolean encontrado =false; // bandera: no se ha encontrado nit
        Iterator <Habitacion> it = H.iterator();
            Habitacion habitacion = null;
            while(it.hasNext() && (!encontrado)){
            habitacion = it.next();
            if(nombre.compareTo(habitacion.getNombre())==0)
            {
            //encontro el nit en el arreglo
                encontrado=true; // cambio de la bandera
            }
                  
            }
        if (encontrado)
        {
        return habitacion;
        }
        else
        {
        return null;
        }  
    }
    
    
    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
         Habitacion oHabitacion = buscarCodigo(tCodigo.getText());
        if(oHabitacion!=null){
        tNombre.setText(oHabitacion.getNombre());
        tCapacidad.setText(oHabitacion.getCapacidad());
        tDes.setText(oHabitacion.getDescripcion());
       
        }
        else
        {
            JOptionPane.showMessageDialog(null,"**LO SENTIMOS..... LA HABITACION NO EXISTE, INTENTE NUEVAMENTE**", "MENSAJE",JOptionPane.ERROR_MESSAGE);
             LimpiarCampos();
        }
    }//GEN-LAST:event_bBuscarActionPerformed

    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
          Habitacion oHabitacion = buscarCodigo(tCodigo.getText());
        if(oHabitacion!=null)
        {
        oHabitacion.setCodigo(tCodigo.getText());
        oHabitacion.setNombre(tNombre.getText());
        oHabitacion.setCapacidad(tCapacidad.getText());
        oHabitacion.setDescripcion(tDes.getText());

         JOptionPane.showMessageDialog(null,"**DATOS HAN SIDO MODIFICADOS EXITOSAMENTE**", "MENSAJE",JOptionPane.INFORMATION_MESSAGE);    
         LimpiarCampos();
        }
        else
        {
        JOptionPane.showMessageDialog(null,"**LA HABITACION NO EXISTE, INTENTA NUEVAMENTE**", "MENSAJE",JOptionPane.ERROR_MESSAGE);
        LimpiarCampos();
        }
    }//GEN-LAST:event_bModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAgregar;
    private javax.swing.JButton bBinario;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bModificar;
    private javax.swing.JButton bReporte;
    private javax.swing.JButton bSalir2;
    private javax.swing.JLabel eCapacidad;
    private javax.swing.JLabel eCodigo;
    private javax.swing.JLabel eDes;
    private javax.swing.JLabel eHabitacionT;
    private javax.swing.JLabel eLogoH;
    private javax.swing.JLabel eNombre;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tCapacidad;
    private javax.swing.JTextField tCodigo;
    private javax.swing.JTextField tDes;
    private javax.swing.JTextField tNombre;
    // End of variables declaration//GEN-END:variables
}
